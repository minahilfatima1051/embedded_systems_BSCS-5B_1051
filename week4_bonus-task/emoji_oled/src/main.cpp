#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

// ---- OLED setup ----
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_ADDR 0x3C

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

// ---- Your smile emoji bitmap ----
// 'smile_emoji', 64x64px
const unsigned char epd_bitmap_smile_emoji [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xfc, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x7f, 0xfe, 0x0f, 0xff, 0xff,
  0xff, 0xff, 0xc1, 0xff, 0xff, 0x83, 0xff, 0xff, 0xff, 0xff, 0x87, 0xff, 0xff, 0xe1, 0xff, 0xff,
  0xff, 0xfe, 0x1f, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xfc, 0x3f, 0xff,
  0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff,
  0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff,
  0xff, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff,
  0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0x9f, 0xfe, 0x7f, 0xfe, 0x7f, 0xf9, 0xff,
  0xff, 0x1f, 0xfc, 0x3f, 0xfc, 0x3f, 0xf8, 0xff, 0xff, 0x3f, 0xf8, 0x3f, 0xfc, 0x1f, 0xfc, 0xff,
  0xff, 0x3f, 0xf8, 0x1f, 0xf8, 0x1f, 0xfc, 0xff, 0xfe, 0x7f, 0xf0, 0x1f, 0xf8, 0x0f, 0xfe, 0x7f,
  0xfe, 0x7f, 0xf0, 0x1f, 0xf8, 0x0f, 0xfe, 0x7f, 0xfe, 0x7f, 0xf0, 0x1f, 0xf8, 0x0f, 0xfe, 0x7f,
  0xfe, 0x7f, 0xf8, 0x1f, 0xf8, 0x1f, 0xfe, 0x7f, 0xfe, 0x7f, 0xf8, 0x3f, 0xfc, 0x1f, 0xfe, 0x7f,
  0xfc, 0x7f, 0xfc, 0x3f, 0xfc, 0x3f, 0xfe, 0x3f, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x3f,
  0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x3f,
  0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xfe, 0x7c, 0xff, 0xff, 0xff, 0xff, 0x3e, 0x7f,
  0xfe, 0x7e, 0x7f, 0xff, 0xff, 0xfe, 0x7e, 0x7f, 0xfe, 0x7e, 0x3f, 0xff, 0xff, 0xfc, 0x7e, 0x7f,
  0xfe, 0x7f, 0x3f, 0xff, 0xff, 0xfc, 0xfe, 0x7f, 0xff, 0x3f, 0x1f, 0xff, 0xff, 0xf8, 0xfc, 0xff,
  0xff, 0x3f, 0x8f, 0xff, 0xff, 0xf1, 0xfc, 0xff, 0xff, 0x1f, 0xc7, 0xff, 0xff, 0xe3, 0xf8, 0xff,
  0xff, 0x9f, 0xe1, 0xff, 0xff, 0x87, 0xf9, 0xff, 0xff, 0x8f, 0xf0, 0xff, 0xff, 0x0f, 0xf1, 0xff,
  0xff, 0xcf, 0xfc, 0x1f, 0xf8, 0x3f, 0xf3, 0xff, 0xff, 0xc7, 0xff, 0x00, 0x00, 0xff, 0xe3, 0xff,
  0xff, 0xe3, 0xff, 0xc0, 0x03, 0xff, 0xc7, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff,
  0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x1f, 0xff,
  0xff, 0xfc, 0x3f, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xfe, 0x1f, 0xff, 0xff, 0xf8, 0x7f, 0xff,
  0xff, 0xff, 0x87, 0xff, 0xff, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xff, 0xff, 0x83, 0xff, 0xff,
  0xff, 0xff, 0xf0, 0x7f, 0xfe, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x3f, 0xff, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

void setup() {
  Wire.begin(21, 22); // ESP32 default I2C pins (SDA=21, SCL=22)

  if (!display.begin(SSD1306_SWITCHCAPVCC, OLED_ADDR)) {
    for (;;); // stop if OLED init fails
  }

  display.clearDisplay();

  // Draw the 64x64 smile emoji bitmap
  display.drawBitmap(
    (SCREEN_WIDTH - 64) / 2,  // center X
    (SCREEN_HEIGHT - 64) / 2, // center Y
    epd_bitmap_smile_emoji,   // bitmap
    64,                       // width
    64,                       // height
    SSD1306_WHITE             // color
  );

  display.display();
}

void loop() {
  // nothing to do here
}